#include<iostream>
#include<malloc.h>
using namespace std;
struct node
{
	int data;
	node * left,*right;
	
};
struct BT
{
	node * root;

};
node * createNode(int k)
{
	node * newNode=(node *) malloc(sizeof(node));
	newNode->data=k;
	newNode->left=NULL;
	newNode->right=NULL;
	return newNode;

}
void printBT(node * root)
{
	if(root==NULL)
	{
		return;
	}
	printBT(root->left);
	cout<<root->data<<" ";
	printBT(root->right);	

}
void insertBT(node **root,int k)
{
	node * newNode=createNode(k);
	if(*root==NULL)
	{
		*root=newNode;
	}
	else
	{
		node * current=*root;
		node *prev=NULL;
		while(current!=NULL)
		{
			if(current->data>=k)
			{
				prev=current;
				current=current->left;
				
			}
			else if(current->data<k )
			{
				prev=current;
				current=current->right;
			}
					
		}
		if(prev->data<k)
		{
			prev->right=newNode;
		}
		else
		{
			prev->left=newNode;
		}
		//cout<<"IN"<<endl;
	}

} 
bool checkPathOfSum(node *root,int sum)
{
	if(root== NULL)
	{
		return 0;
	}
	if(sum==root->data)
	{
		return 1;
	}
	bool l=checkPathOfSum(root->left,sum-root->data);
	bool r=checkPathOfSum(root->right,sum-root->data);
	if(l||r)
	return 1;
	else
	return 0;
}
int main()
{
	int num,k,sum;
	cin >> num>>sum;
	node * root = NULL;
	while(num!=0)
	{
		cin>>k;
		
		insertBT(&root,k);
		num--;
		//cout<<"here"<<endl;
	
	}
	//cout<<"lolz"<<endl;
	printBT(root);
	bool flag=checkPathOfSum(root,sum);
	if(flag)
	cout<<"yes"<<endl;
	else
	cout<<"NO"<<endl;
	return 0;
}
